# Specify the provider and access details
provider "aws" {
  region = "${var.aws_region}"
  shared_credentials_file = "/home/tim/.aws/credentials"
  profile = "ansible"
}

# Create a VPC to launch our instances into
resource "aws_vpc" "blackbox" {
  cidr_block = "172.16.0.0/16"
}

# Create an internet gateway to give our subnet access to the outside world
resource "aws_internet_gateway" "default" {
  vpc_id = "${aws_vpc.blackbox.id}"
}

# Grant the VPC internet access on its main route table
resource "aws_route" "internet_access" {
  route_table_id         = "${aws_vpc.blackbox.main_route_table_id}"
  destination_cidr_block = "0.0.0.0/0"
  gateway_id             = "${aws_internet_gateway.default.id}"
}

# Create a subnet to launch our instances into
resource "aws_subnet" "default" {
  vpc_id                  = "${aws_vpc.blackbox.id}"
  cidr_block              = "172.16.1.0/24"
  map_public_ip_on_launch = true
}

resource "aws_security_group" "probe" {
  name        = "probe"
  description = "probe security generated by terraform"
  vpc_id      = "${aws_vpc.blackbox.id}"

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["50.192.3.201/32"]
  }

  # HTTP access from anywhere
  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  # outbound internet access
  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

resource "aws_instance" "probe" {
  instance_type = "t2.nano"
  ami = "${lookup(var.aws_amis, var.aws_region)}"
  vpc_security_group_ids = ["${aws_security_group.probe.id}"]
  user_data = "${file("userdata")}"
  associate_public_ip_address = "true"
  subnet_id = "${aws_subnet.default.id}"
}

data "aws_route53_zone" "blackbox" {
  name = "blackbox.freunds.net."
}

resource "aws_route53_record" "probe" {
  zone_id = "${data.aws_route53_zone.blackbox.zone_id}"
  name = "${var.aws_region}.${data.aws_route53_zone.blackbox.name}"
  type = "A"
  ttl = "300"
  records = ["${aws_instance.probe.public_ip}"]
}
